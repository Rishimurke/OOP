#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
using namespace std;

class student{
	public:
		int rollno;
		string name;
		char mob[10];
		
		bool operator ==(const student &student1){
			return(rollno==student1.rollno);
		}
		
		
		friend ostream& operator << (ostream &out, const student &);
		friend istream& operator >> (istream &in,student &k);
};
ostream& operator << (ostream &out , const student &k)
{
	out<<"\n\t \t "<<k.rollno<<"\t\t "<<k.name<<"\t t "<<k.mob;
	return out;
}
istream& operator >> (istream &in ,student &k)
{
	cout<<"\n enter roll no:";
	in>>k.rollno;
	cout<<"\n enter name:";
	in>>k.name;
	cout<<"\n enter mob:";
	in>>k.mob;
	return in;
}
vector<student> read()
{
	int n;
	vector<student> j;
	student k;
	cout<<"enter number of students:";
	cin>>n;
	for(int i=0;i<n;i++){
		cin>>k;
		j.push_back(k);
	}
	
	return j;
}
void printfunction (const student &k)
{
	cout<<k;
}
void print (const vector<student> &j)
{
	cout<<"\n \t \t ROLLNO\t \t NAME \t \t MOBILE:";
	for_each(j.begin(),j.end(),printfunction);
}
void search( vector<student> &j)
{
	student k;
	cout<<"enter rollno u want to search:";
	cin>>k.rollno;
	cout<<"\n \t \t ROLLNO\t \t NAME \t \t MOBILE:";
	vector<student>::iterator p;
	p=find(j.begin(),j.end(),k);
	if(p!=j.end())
	cout<<*p;
	else
	cout<<"\n not found!";
}
bool sort_func(const student &x, const student &y)
{
	return(x.rollno<y.rollno);
}
void sort(vector<student> &j)
{
	sort(j.begin(),j.end(),sort_func);
}

int main()
{
	vector<student> s;
	int ch;
	do
	{
	
	cout<<"\n 1. add info";
	cout<<"\n 2. display info";
	cout<<"\n 3. search info";
	cout<<"\n 4. sort info";
	cout<<"\n 5. exit";
	cout<<"\n \n \n enter your choice ch";
	cin>>ch;
	
	switch(ch)
	{
		case 1:
			s=read();
			break;
			
			case 2:
				print(s);
				break;
				
				case 3:
					search(s);
					break;
					
					case 4:
						sort(s);
						print(s);
						break;
}
	}while(ch!=5);
	
}