Problem Statement:
Write a program in C++ to use map associative container. The keys will be the names of states and the
values will be the populations of the states. When the program runs, the user is prompted to type the name
of a state. The program then looks in the map, using the state name as an index and returns the population
of the state.

Objectives:
1. Understand the concept of map in associate container
2. Understand the concept friend function

Outcomes:
1. Will be to make use of constructors
2. Will be able to design a program using friend functions.
3. Will be able to design a program using exception handling.

Software Requirements:
3. 64-bit Open source Linux or its derivative
4. Open Source C++ Programming tool like G++/GCC.

Theory:
Maps are associative containers that store elements in a mapped fashion. Each element has a key value and a mapped
value. No two mapped values can have same key values.
Some basic functions associated with Map:
begin() – Returns an iterator to the first element in the map
end() – Returns an iterator to the theoretical element that follows last element in the map
size() – Returns the number of elements in the map
max_size() – Returns the maximum number of elements that the map can hold
empty() – Returns whether the map is empty
pair insert(keyvalue, mapvalue) – Adds a new element to the map
erase(iterator position) – Removes the element at the position pointed by the iterator
erase(const g)– Removes the key value ‘g’ from the map
clear() – Removes all the elements from the map

Creating a Map in C++ STL
Maps can easily be created using the following statement :
map<key_type, value_tye> map_name;
Copy
This will create a map with key of type Key_type and value of type value_type. One thing which is to remembered is
that key of a map and corresponding values are always inserted as a pair, you cannot insert only key or just a value in
a map